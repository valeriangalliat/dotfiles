#!/bin/sh -e
#
# Instal or update all the dependencies.
#

cd "$(dirname "$0")"

# Environment
# ===========

#
# Whether to update existing dependencies.
#
UPDATE="${UPDATE:-true}"

# Global variables
# ================

cat=
dep=

# Helpers
# =======

#
# Print arguments and execute them.
#
p() {
    echo "$@" && "$@"
}

#
# Print arguments except first and execute them.
#
pp() {
    first=$1; shift
    echo "$@" && "$first" "$@"
}

#
# Print a header for the current context.
#
header() {
    echo
    echo '#'
    echo "# $cat/$dep"
    echo '#'
    echo
}

#
# Run a builder.
#
# A builder is function declined in `_i` and `_u` variants, respectively
# for "install" and "update".
#
# If the target directory (`$cat/$dep`) doesn't exists, the install
# function is executed, otherwise the update function.
#
# Note the builder functions are executed in the targeted directory.
#
# Also a header is printed.
#
run() {
    prefix=$1; shift

    if [ ! -d "$cat/$dep" ]; then
        header
        mkdir -p "$cat/$dep"
        (cd "$cat/$dep" && "${prefix}_i" "$@")
    elif "$UPDATE"; then
        header
        (cd "$cat/$dep" && "${prefix}_u" "$@")
    fi
}

# Builders
# ========

git() {
    run git "$@"
}

git_i() {
    pp command git clone "$1" .
}

git_u() {
    pp command git remote set-url origin "$1"
    pp command git pull
}

github() {
    git "https://github.com/${1}.git"
}

# Main
# ====

. ./deps.sh
