#
# ~/.zshrc
#


# macOS hack {{{
# ==============

#
# On macOS, `/etc/zprofile`, which runs after `~/.zshenv`, calls `path_helper`
# which reorders `PATH` in a way that put system paths before whatever was set
# in `~/.zshenv`.
#
# This is a problem e.g. to use Homebrew's version of `rsync` instead of the
# system's older version.
#
# See <https://gist.github.com/Linerre/f11ad4a6a934dcf01ee8415c9457e7b2> for
# details.
#
# To work around that, on macOS, I make `~/.zshenv` return instantly when
# loaded initially, but then force load it from `~/.zshrc`, whic runs _after_
# `path_helper` is called.
#
if [[ "$OSTYPE" = darwin* ]]; then
    IN_ZSHRC=true
    source ~/.zshenv
    unset IN_ZSHRC
fi

# }}}

# Initialization {{{
# ==================

    export ZSH="$DOTFILES/zsh/oh-my-zsh"

    # Set `LS_COLORS` on Linux before `$ZSH/lib/theme-and-appearance.zsh` is loaded
    source "$DOTFILES/zsh/dircolors"

    autoload -U compinit && compinit # Command completion

    # Load only what I want from `oh-my-zsh`
    source "$ZSH/lib/completion.zsh" # Nice completion settings
    source "$ZSH/lib/grep.zsh" # Enable colors and ignore VCS directories
    source "$ZSH/lib/history.zsh" # Nice history settings
    source "$ZSH/lib/key-bindings.zsh" # Nice key bindings
    source "$ZSH/lib/functions.zsh" # Necessary for `termsupport.zsh`
    source "$ZSH/lib/termsupport.zsh" # Set terminal window title
    source "$ZSH/lib/theme-and-appearance.zsh" # Enable colors on various commands
    source "$ZSH/lib/directories.zsh" # `ls` and other directory shortcuts, as well as `autocd`

    # Plugins
    source "$ZSH/plugins/git/git.plugin.zsh" # Nice Git aliases, could cherery pick though
    source "$ZSH/plugins/colored-man-pages/colored-man-pages.plugin.zsh"
    source "$ZSH/plugins/history-substring-search/history-substring-search.plugin.zsh"
    source "$DOTFILES/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh"

# }}}

# Prompt {{{
# ==========

    autoload -U vcs_info
    precmd() { vcs_info }
    setopt prompt_subst
    zstyle ':vcs_info:*' formats "%{$fg_bold[blue]%}(%{$fg_bold[red]%}%b%{$fg_bold[blue]%})%{$reset_color%} "
    zstyle ':vcs_info:*' actionformats "%{$fg_bold[blue]%}(%{$fg_bold[red]%}%b%{$fg_bold[yellow]%}:%a%{$fg_bold[blue]%})%{$reset_color%} "
    PROMPT="%(?..%{$fg[red]%}●%{$reset_color%} )%{$fg_bold[cyan]%}%1~%{$reset_color%} \${vcs_info_msg_0_}"
    # Need to use `%F{}` (set) and `%f` (reset) pattern because color 8 (grey) is not an ANSI color
    RPROMPT="%F{8}%*%f"

    # Prepend `user@host` to prompt when under SSH
    if [ -n "$SSH_CLIENT" ]; then
        PROMPT="%{$fg[cyan]%}%n@%{$fg[blue]%}%m ${PROMPT}"
    fi

# }}}

# Essentials {{{
# ==============

    # Allow adding comments in interactive session
    setopt interactivecomments

# }}}

# Theme {{{

    # Terminal colors (except in tmux)
    if [ -z "$TMUX" ]; then
        export BASE16_MODE=dark
        export BASE16_THEME=base16-default-dark

        if [ -f "$HOME/.dotfiles_color_theme" ]; then
            source "$HOME/.dotfiles_color_theme"
        fi

        source "$DOTFILES/zsh/base16-shell/scripts/$BASE16_THEME.sh"
    fi

    #
    # Disable changing title when command running to keep the working
    # directory in the title.
    #
    function omz_termsupport_preexec {
        return
    }

# }}}

# Aliases {{{
# ===========

    # Invert `l` and `ll` from Oh My Zsh
    alias l='ls -lh'
    alias ll='ls -lah'

    alias q=exit
    alias vi=vim

    # Globbing move command
    autoload zmv
    alias mmv='noglob zmv -W'

    alias rgm='rg --max-columns 1000'

    alias jcurl='curl -H "Content-Type: application/json"'

    #
    # Now many repos squash before merging, we can't rely on simple
    # `git branch --merged` to identify local branches to clean.
    #
    # This trick prunes all the branches that were deleted from upstream,
    # usually synonymous of them being merged (or closed) and we liekly
    # don't need the branch locally anymore, so goes and deletes the matching
    # local branch if any.
    #
    alias gprune='git remote prune origin | grep origin/ | cut -d/ -f2- | xargs git branch -D 2>&1 | grep -v "not found"'

# }}}

# Functions {{{
# ===========

    function theme {
        export BASE16_MODE=$1; shift
        export BASE16_THEME=$1; shift
        echo "export BASE16_MODE=$BASE16_MODE" > ~/.dotfiles_color_theme
        echo "export BASE16_THEME=$BASE16_THEME" >> ~/.dotfiles_color_theme
        source "$DOTFILES/zsh/base16-shell/scripts/$BASE16_THEME.sh"
    }

    function tlight {
        theme light base16-atelier-plateau-light
    }

    function tdark {
        theme dark base16-default-dark
    }

# }}}
