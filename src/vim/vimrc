set rtp+=~/.vim/bundle/Vundle.vim

try
    call vundle#begin()
catch
    " Download Vundle and try again
    silent! !sh -c '
    \ u="https://github.com/gmarik/Vundle.vim.git";
    \ p=~/.vim/bundle/Vundle.vim;
    \ mkdir -p ~/.vim/bundle && git clone "$u" "$p"'

    call vundle#begin()
endtry

Plugin 'gmarik/Vundle.vim' " Required for Vundle
Plugin 'scrooloose/nerdtree' " File explorer
Plugin 'bling/vim-airline' " Fancy status line
Plugin 'bling/vim-bufferline' " Buffers in status line
Plugin 'Shougo/unite.vim' " Awesome finder
Plugin 'tpope/vim-fugitive' " Git wrapper
Plugin 'AutoComplPop' " Autocompletion (lightweight)
"Plugin 'Valloric/YouCompleteMe' " Autocompletion (heavy)
Plugin 'bohrshaw/vim-vimperator-syntax' " Vimperator syntax
Plugin 'wombat256.vim' " Color scheme
Plugin 'airblade/vim-rooter' " Change to project root
Plugin 'Lokaltog/vim-easymotion' " Quick motions
Plugin 'tommcdo/vim-exchange' " Exchange operator
Plugin 'tpope/vim-surround' " Change surroundings
Plugin 'tpope/vim-repeat' " Repeat with `.` for plugins
Plugin 'tpope/vim-commentary' " Comment stuff out
Plugin 'tpope/vim-endwise' " Auto close blocks
Plugin 'Auto-Pairs' " Auto close structures and quotes
Plugin 'Align' " Statements alignment helper
Plugin 'pangloss/vim-javascript' " Improved JavaScript
Plugin 'godlygeek/tabular' " Text alignment helper
Plugin 'plasticboy/vim-markdown' " Improved Markdown
"Plugin 'SirVer/ultisnips' " Snippets engine
"Plugin 'honza/vim-snippets' " Actual snippets
Plugin 'PeterRincker/vim-argumentative' " Switch arguments
"Plugin 'wellle/targets.vim' " New text objects
Plugin 'svermeulen/vim-easyclip' " Clipboard helper
" Plugin 'ConradIrwin/vim-bracketed-paste' " Auto toggle paste mode
Plugin 'valeriangalliat/vim-bracketed-paste' " Auto toggle paste mode

call vundle#end()

" Filetype
" ========

filetype plugin on " Filetype specific config (required for Vundle)
filetype indent on " Load indentation rules regarding of filetype

" Theme
" =====

set t_Co=256
colorscheme wombat256mod
syntax on " Syntax highlighting

" Color columns like cursor line
highlight ColorColumn term=underline ctermbg=236 guibg=#32322f

" Global
" ======

set nocompatible " Not compatible with Vi
set backspace=indent,eol,start " More powerful backspace
set ruler " Show cursor position
set number " Display numbers
set cursorline " Highlight cursor line
set colorcolumn=80 " Show 80 chars limit
set wildmenu " Enhanced command mode (display matches on tab)
set encoding=utf-8 " UTF-8 support
set nowrap " No word wrap
set showcmd " Show commands being typed
set laststatus=2 " Always show status line
set hidden " Silently change unsaved buffer

" Change leader key
let mapleader=','

"
" Complete until longest match. On tab, list matches. If tab is pressed
" again, do full completion.
"
set wildmode=longest,list,full

" Indentation
" ===========

set autoindent " Automatic indentation (keep previous line offset)
set copyindent " Copy previous line indentation
set tabstop=4 " Tab width
set expandtab " Use spaces instead of tabs
set softtabstop=4 " Remove 4 spaces with backspace
set shiftwidth=4 " Indentation command width
set shiftround " Indentation is always a multiple of configured width

" Custom filetypes
" ================

" Auto return to line after 72 chars for text files
au FileType text set textwidth=72
au FileType tex set textwidth=72
au FileType markdown set textwidth=72

" Filetype indentation
" ====================

au FileType apache set et!
au FileType gitconfig set et!

au FileType javascript set ts=2 sts=2 sw=2
au FileType html set ts=2 sts=2 sw=2
au FileType markdown set ts=2 sts=2 sw=2 wrap

" Syntax associations
" ===================

au BufRead,BufNewFile *.md set filetype=markdown
au BufRead,BufNewFile *.ronn set filetype=markdown
au BufRead,BufNewFile vimperatorrc set filetype=vimperator

" Search
" ======

set ignorecase " Case insensitive
set infercase " Sensitive completion
set smartcase " Sensitive search if upper characters
set incsearch " Highlight pattern while typed

" Whitespaces
" ===========

set listchars=tab:——,trail:•,nbsp:•
set list " Show whitespaces

" Misc
" ====

set virtualedit=block " No bounds when in visual block
set spelllang=en " Spell check language

" Wrap
" ====

" Include the wrap lines for following moves
noremap j gj
noremap k gk

set linebreak " Do not break words

" Plugins
" =======

" `nerdtree`
" ----------

noremap <leader>n :NERDTreeToggle<CR>

" `unite`
" -------

noremap <leader>f :Unite file<CR>
noremap <leader>b :Unite buffer<CR>

" `bufferline`
" ------------

let g:bufferline_echo=0

autocmd VimEnter *
    \ let &statusline='%{bufferline#refresh_status()}'
    \ .bufferline#get_status_string()

" `easyclip`
" ----------

imap <C-v> <Plug>EasyClipInsertModePaste
